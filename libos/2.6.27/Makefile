OSVER = 2.6.27

TARGET = libos.a
KSRCS = \
	kernel/cpuset.c kernel/delayacct.c kernel/exit.c \
	kernel/fork.c kernel/hrtimer.c kernel/pid.c \
	kernel/sched.c kernel/spinlock.c kernel/time.c \
	kernel/time/timekeeping.c \
	fs/block_dev.c fs/dcache.c fs/exec.c fs/filesystems.c \
	fs/pipe.c fs/seq_file.c fs/open.c fs/stat.c fs/namei.c \
	fs/namespace.c \
	fs/proc/array.c fs/proc/base.c fs/proc/mmu.c \
	fs/proc/proc_misc.c fs/proc/proc_tty.c fs/proc/task_mmu.c \
	fs/ext3/super.c fs/ext3/symlink.c fs/ext3/balloc.c \
	mm/hugetlb.c mm/page_alloc.c mm/swapfile.c mm/filemap.c \
	mm/mmap.c \
	net/socket.c \
	net/core/dev.c net/core/sock.c \
	net/ipv4/devinet.c net/ipv4/raw.c net/ipv4/tcp_ipv4.c net/ipv4/udp.c \
	net/ipv6/tcp_ipv6.c net/ipv6/udp.c net/ipv6/raw.c \
	net/packet/af_packet.c net/unix/af_unix.c \
	drivers/char/tty_io.c \
	arch/x86/kernel/irq_64.c arch/x86/kernel/process_64.c \
	arch/x86/mm/pageattr.c arch/x86/mm/init_64.c \
	lib/bitmap.c lib/cpumask.c lib/ctype.c lib/find_next_bit.c \
	lib/hweight.c lib/string.c lib/vsprintf.c lib/radix-tree.c \
	lib/percpu_counter.c \
	utils.c
CSRCS = ../common/addr.c ../common/htable.c

# kernel/kallsyms.c arch/x86/mm/init_64.c
# dcache_print.c

TOP = ../..

include $(TOP)/build/build-$(OSVER)

OBJS += $(CSRCS:.c=.o)

PC_ST = structs.pc
PC_VAR = variables.pc
MAP = System.map
CONF = config

ASPECTGEN = $(TOP)/bin/aspectgen
LDSGEN = $(TOP)/bin/ldsgen
AUTOCONFGEN = $(TOP)/bin/autoconfgen

all: $(LDS) $(TARGET)

$(TARGET): $(OBJS)
	ar rcs $@ $(OBJS)

# class.lst is generated by ac++
classes.lst:
	sort class.lst | uniq > classes.lst
	rm class.lst

../common/addr.o: ../common/addr.c
	make -C ../common

../common/htable.o: ../common/htable.c
	make -C ../common

# pointcuts.lst is prepared from classes.lst
$(ASPECT): $(PC_ST) $(PC_VAR)
	$(ASPECTGEN) $(PC_ST) $(PC_VAR) > $(ASPECT)

$(LDS): $(PC_VAR) $(MAP)
	$(LDSGEN) $(MAP) $(PC_VAR) > $(LDS)

include/linux/autoconf.h: $(CONF)
	cp -f $@ $@.old
	$(AUTOCONFGEN) < $(CONF) > $@

clean:
	rm -f $(TARGET) $(ASPECT) $(LDS) $(OBJS) *.o \
		$(ACCS) $(CXXS) $(LOGS)
