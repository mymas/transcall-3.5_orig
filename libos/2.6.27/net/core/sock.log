net/core/sock.acc: In function ‘void hlist_del(hlist_node*)’:
net/core/sock.acc:8941:10: warning: invalid conversion from ‘void*’ to ‘hlist_node*’ [-fpermissive]
  n->next = ((void *) 0x00100100);
          ^
net/core/sock.acc:8942:11: warning: invalid conversion from ‘void*’ to ‘hlist_node**’ [-fpermissive]
  n->pprev = ((void *) 0x00200200);
           ^
net/core/sock.acc: In function ‘thread_info* current_thread_info()’:
net/core/sock.acc:9457:5: warning: invalid conversion from ‘void*’ to ‘thread_info*’ [-fpermissive]
  ti = (void *)(({ typeof(_proxy_pda.kernelstack) ret__; switch (sizeof(_proxy_pda.kernelstack)) { case 2: asm("mov" "w %%gs:%c1,%0" : "=r" (ret__) : "i" (((size_t) &((struct x8664_pda *)0)->kernelstack)), "m" (__get__proxy_pda_490(&_proxy_pda).kernelstack)); break; case 4: asm("mov" "l %%gs:%c1,%0": "=r" (ret__): "i" (((size_t) &((struct x8664_pda *)0)->kernelstack)), "m" (__get__proxy_pda_491(&_proxy_pda).kernelstack)); break; case 8: asm("mov" "q %%gs:%c1,%0": "=r" (ret__) : "i" (((size_t) &((struct x8664_pda *)0)->kernelstack)), "m" (__get__proxy_pda_492(&_proxy_pda).kernelstack)); break; default: __bad_pda_field(); } ret__; }) + (5*8) - (((1UL) << 12) << 1));
     ^
net/core/sock.acc: In function ‘void timer_stats_account_hrtimer(hrtimer*)’:
net/core/sock.acc:15215:43: warning: invalid conversion from ‘hrtimer_restart (*)(hrtimer*)’ to ‘void*’ [-fpermissive]
      timer->function, timer->start_comm, 0);
                                           ^
net/core/sock.acc:15208:13: warning:   initializing argument 4 of ‘void timer_stats_update_stats(void*, pid_t, void*, void*, char*, unsigned int)’ [-fpermissive]
 extern void timer_stats_update_stats(void *timer, pid_t pid, void *startf,
             ^
net/core/sock.acc: In function ‘int timer_pending(timer_list*)’:
net/core/sock.acc:15357:88: warning: taking address of temporary [-fpermissive]
  return __get__ZN9list_head4nextE_717(&__get__ZN10timer_list5entryE_718(&timer->entry).next) != 0;
                                                                                        ^
net/core/sock.acc: In function ‘void list_del_rcu(list_head*)’:
net/core/sock.acc:17017:14: warning: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
  entry->prev = ((void *) 0x00200200);
              ^
net/core/sock.acc: In function ‘void list_replace_rcu(list_head*, list_head*)’:
net/core/sock.acc:17103:12: warning: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
  old->prev = ((void *) 0x00200200);
            ^
net/core/sock.acc: In function ‘void hlist_del_rcu(hlist_node*)’:
net/core/sock.acc:17233:11: warning: invalid conversion from ‘void*’ to ‘hlist_node**’ [-fpermissive]
  n->pprev = ((void *) 0x00200200);
           ^
net/core/sock.acc: In function ‘void hlist_replace_rcu(hlist_node*, hlist_node*)’:
net/core/sock.acc:17315:13: warning: invalid conversion from ‘void*’ to ‘hlist_node**’ [-fpermissive]
  old->pprev = ((void *) 0x00200200);
             ^
net/core/sock.acc: In function ‘int dname_external(dentry*)’:
net/core/sock.acc:17778:81: warning: taking address of temporary [-fpermissive]
  return __get__ZN4qstr4nameE_757(&__get__ZN6dentry6d_nameE_758(&dentry->d_name).name) != __get__ZN6dentry7d_inameE_759(dentry->d_iname);
                                                                                 ^
net/core/sock.acc: In function ‘pid_namespace* ns_of_pid(pid*)’:
net/core/sock.acc:18384:113: warning: taking address of temporary [-fpermissive]
   ns = __get__ZN4upid2nsE_767(&__get__ZN3pid7numbersE_768(&pid->numbers[__get__ZN3pid5levelE_769(&pid->level)]).ns);
                                                                                                                 ^
net/core/sock.acc: In function ‘pid_t pid_nr(pid*)’:
net/core/sock.acc:18461:77: warning: taking address of temporary [-fpermissive]
   nr = __get__ZN4upid2nrE_770(&__get__ZN3pid7numbersE_771(&pid->numbers[0]).nr);
                                                                             ^
net/core/sock.acc: In function ‘void simple_transaction_set(file*, size_t)’:
net/core/sock.acc:21385:48: warning: invalid conversion from ‘void*’ to ‘simple_transaction_argresp*’ [-fpermissive]
  struct simple_transaction_argresp *ar = file->private_data;
                                                ^
net/core/sock.acc: In function ‘net* PDE_NET(proc_dir_entry*)’:
net/core/sock.acc:21615:22: warning: invalid conversion from ‘void*’ to ‘net*’ [-fpermissive]
  return pde->parent->data;
                      ^
net/core/sock.acc: In function ‘task_struct* next_thread(task_struct*)’:
net/core/sock.acc:26256:165: warning: taking address of temporary [-fpermissive]
  return ({ typeof( ((struct task_struct *)0)->thread_group ) *__mptr = ((__get__ZN9list_head4nextE_903(&__get__ZN11task_struct12thread_groupE_904(&p->thread_group).next))); (struct task_struct *)( (char *)__mptr - ((size_t) &((struct task_struct *)0)->thread_group) );})
                                                                                                                                                                     ^
net/core/sock.acc: At global scope:
net/core/sock.acc:28039:16: warning: declaration of ‘int (* ctl_table::proc_handler)(ctl_table*, int, file*, void*, size_t*, loff_t*)’ [-fpermissive]
  proc_handler *proc_handler;
                ^
net/core/sock.acc:27999:13: warning: changes meaning of ‘proc_handler’ from ‘typedef int proc_handler(struct ctl_table*, int, struct file*, void*, size_t*, loff_t*)’ [-fpermissive]
 typedef int proc_handler (struct ctl_table *ctl, int write, struct file * filp,
             ^
net/core/sock.acc: In function ‘void set_compound_page_dtor(page*, void (*)(page*))’:
net/core/sock.acc:28907:19: warning: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
  page[1].lru.next = (void *)dtor;
                   ^
net/core/sock.acc: In function ‘void set_compound_order(page*, long unsigned int)’:
net/core/sock.acc:28994:19: warning: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
  page[1].lru.prev = (void *)order;
                   ^
net/core/sock.acc: In function ‘zone_type page_zonenum(page*)’:
net/core/sock.acc:28998:83: warning: invalid conversion from ‘long unsigned int’ to ‘zone_type’ [-fpermissive]
  return (page->flags >> (((((sizeof(unsigned long)*8) - 0) - 9) - 2) * (2 != 0))) & ((1UL << 2) - 1);
                                                                                   ^
net/core/sock.acc: In function ‘void zone_page_state_add(long int, zone*, zone_stat_item)’:
net/core/sock.acc:29173:55: warning: taking address of temporary [-fpermissive]
  atomic_long_add(x, &__get_vm_stat_1077(&vm_stat[item]));
                                                       ^
net/core/sock.acc: In function ‘long unsigned int global_page_state(zone_stat_item)’:
net/core/sock.acc:29213:62: warning: taking address of temporary [-fpermissive]
  long x = atomic_long_read(&__get_vm_stat_1078(&vm_stat[item]));
                                                              ^
net/core/sock.acc: In function ‘ts_config* alloc_ts_config(size_t, gfp_t)’:
net/core/sock.acc:31434:73: warning: invalid conversion from ‘void*’ to ‘ts_config*’ [-fpermissive]
  conf = kzalloc((((sizeof(*conf)) + 8 -1) & ~(8 -1)) + payload, gfp_mask);
                                                                         ^
net/core/sock.acc:31436:21: warning: invalid conversion from ‘void*’ to ‘ts_config*’ [-fpermissive]
   return ERR_PTR(-12);
                     ^
net/core/sock.acc: In function ‘void async_tx_ack(dma_async_tx_descriptor*)’:
net/core/sock.acc:33654:12: warning: invalid conversion from ‘int’ to ‘dma_ctrl_flags’ [-fpermissive]
  tx->flags |= DMA_CTRL_ACK;
            ^
net/core/sock.acc: In function ‘netdev_queue* netdev_get_tx_queue(net_device*, unsigned int)’:
net/core/sock.acc:36674:92: warning: taking address of temporary [-fpermissive]
  return &__get__ZN10net_device3_txE_1339(&__get__ZN10net_device3_txE_1340(&dev->_tx)[index]);
                                                                                            ^
net/core/sock.acc: In function ‘void netdev_for_each_tx_queue(net_device*, void (*)(net_device*, netdev_queue*, void*), void*)’:
net/core/sock.acc:36791:89: warning: taking address of temporary [-fpermissive]
   f(dev, &__get__ZN10net_device3_txE_1342(&__get__ZN10net_device3_txE_1343(&dev->_tx)[i]), arg);
                                                                                         ^
net/core/sock.acc: In function ‘net_device* next_net_device(net_device*)’:
net/core/sock.acc:36957:92: warning: taking address of temporary [-fpermissive]
  lh = __get__ZN9list_head4nextE_1345(&__get__ZN10net_device8dev_listE_1346(&dev->dev_list).next);
                                                                                            ^
net/core/sock.acc: In function ‘net_device* first_net_device(net*)’:
net/core/sock.acc:37034:150: warning: taking address of temporary [-fpermissive]
   ({ typeof( ((struct net_device *)0)->dev_list ) *__mptr = (__get__ZN9list_head4nextE_1347(&__get__ZN3net13dev_base_headE_1348(&net->dev_base_head).next)); (struct net_device *)( (char *)__mptr - ((size_t) &((struct net_device *)0)->dev_list) );});
                                                                                                                                                      ^
net/core/sock.acc: In function ‘nlattr* nlmsg_attrdata(nlmsghdr*, int)’:
net/core/sock.acc:42207:38: warning: invalid conversion from ‘void*’ to ‘unsigned char*’ [-fpermissive]
  unsigned char *data = nlmsg_data(nlh);
                                      ^
net/core/sock.acc: In function ‘int nla_nest_compat_end(sk_buff*, nlattr*)’:
net/core/sock.acc:42640:38: warning: invalid conversion from ‘void*’ to ‘nlattr*’ [-fpermissive]
  struct nlattr *nest = (void *)start + ( ((start->nla_len)+4 -1) & ~(4 -1) );
                                      ^
net/core/sock.acc: In function ‘sock* sk_next(sock*)’:
net/core/sock.acc:43788:104: warning: taking address of temporary [-fpermissive]
  return __get__ZN10hlist_node4nextE_1519(&__get__ZN4sock11__sk_commonE_1521(&sk->__sk_common).skc_node.next) ?
                                                                                                        ^
net/core/sock.acc:43789:163: warning: taking address of temporary [-fpermissive]
   ({ typeof( ((struct sock *)0)->__sk_common.skc_node ) *__mptr = (__get__ZN10hlist_node4nextE_1522(&__get__ZN4sock11__sk_commonE_1524(&sk->__sk_common).skc_node.next)); (struct sock *)( (char *)__mptr - ((size_t) &((struct sock *)0)->__sk_common.skc_node) );}) : 0;
                                                                                                                                                                   ^
net/core/sock.acc: In function ‘u32 jhash(void*, u32, u32)’:
net/core/sock.acc:46158:10: warning: invalid conversion from ‘void*’ to ‘u8* {aka unsigned char*}’ [-fpermissive]
  u8 *k = key;
          ^
net/core/sock.acc: In function ‘request_sock* reqsk_alloc(request_sock_ops*)’:
net/core/sock.acc:46357:115: warning: invalid conversion from ‘void*’ to ‘request_sock*’ [-fpermissive]
  struct request_sock *req = kmem_cache_alloc(__get__ZN16request_sock_ops4slabE_1596(&ops->slab), ((( gfp_t)0x20u)));
                                                                                                                   ^
net/core/sock.acc: In function ‘void copy_user_highpage(page*, page*, long unsigned int, vm_area_struct*)’:
net/core/sock.acc:49583:36: warning: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
  vfrom = kmap_atomic(from, KM_USER0);
                                    ^
net/core/sock.acc:49584:32: warning: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
  vto = kmap_atomic(to, KM_USER1);
                                ^
net/core/sock.acc: In function ‘void copy_highpage(page*, page*)’:
net/core/sock.acc:49596:36: warning: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
  vfrom = kmap_atomic(from, KM_USER0);
                                    ^
net/core/sock.acc:49597:32: warning: invalid conversion from ‘void*’ to ‘char*’ [-fpermissive]
  vto = kmap_atomic(to, KM_USER1);
                                ^
net/core/sock.acc: In function ‘int __ipv6_addr_diff(void*, void*, int)’:
net/core/sock.acc:54729:15: warning: invalid conversion from ‘void*’ to ‘__be32* {aka unsigned int*}’ [-fpermissive]
  __be32 *a1 = token1, *a2 = token2;
               ^
net/core/sock.acc:54729:29: warning: invalid conversion from ‘void*’ to ‘__be32* {aka unsigned int*}’ [-fpermissive]
  __be32 *a1 = token1, *a2 = token2;
                             ^
net/core/sock.acc: In function ‘int addr_match(void*, void*, int)’:
net/core/sock.acc:55763:15: warning: invalid conversion from ‘void*’ to ‘__be32* {aka unsigned int*}’ [-fpermissive]
  __be32 *a1 = token1;
               ^
net/core/sock.acc:55764:15: warning: invalid conversion from ‘void*’ to ‘__be32* {aka unsigned int*}’ [-fpermissive]
  __be32 *a2 = token2;
               ^
net/core/sock.acc: In function ‘xfrm_algo* xfrm_algo_clone(xfrm_algo*)’:
net/core/sock.acc:56807:96: warning: invalid conversion from ‘void*’ to ‘xfrm_algo*’ [-fpermissive]
  return kmemdup(orig, xfrm_alg_len(orig), ((( gfp_t)0x10u) | (( gfp_t)0x40u) | (( gfp_t)0x80u)));
                                                                                                ^
net/core/sock.acc: In function ‘char* crypto_tfm_alg_modname(crypto_tfm*)’:
net/core/sock.acc:57440:124: warning: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]
  return ({ struct module *__mod = (tfm->__crt_alg->cra_module); __mod ? __get__ZN6module4nameE_1976(__mod->name) : "kernel"; });
                                                                                                                            ^
net/core/sock.acc: In function ‘ablkcipher_request* ablkcipher_request_alloc(crypto_ablkcipher*, gfp_t)’:
net/core/sock.acc:57621:44: warning: invalid conversion from ‘void*’ to ‘ablkcipher_request*’ [-fpermissive]
         crypto_ablkcipher_reqsize(tfm), gfp);
                                            ^
net/core/sock.acc: In function ‘aead_request* aead_request_alloc(crypto_aead*, gfp_t)’:
net/core/sock.acc:57752:60: warning: invalid conversion from ‘void*’ to ‘aead_request*’ [-fpermissive]
  req = kmalloc(sizeof(*req) + crypto_aead_reqsize(tfm), gfp);
                                                            ^
net/core/sock.acc: In function ‘inet_ehash_bucket* _inet_ehash_bucket(inet_hashinfo*, unsigned int)’:
net/core/sock.acc:58418:182: warning: taking address of temporary [-fpermissive]
  return &__get__ZN13inet_hashinfo5ehashE_2036(&__get__ZN13inet_hashinfo5ehashE_2037(&hashinfo->ehash)[hash & (__get__ZN13inet_hashinfo10ehash_sizeE_2038(&hashinfo->ehash_size) - 1)]);
                                                                                                                                                                                      ^
net/core/sock.acc: In function ‘rwlock_t* inet_ehash_lockp(inet_hashinfo*, unsigned int)’:
net/core/sock.acc:58530:208: warning: taking address of temporary [-fpermissive]
  return &__get__ZN13inet_hashinfo11ehash_locksE_2039(&__get__ZN13inet_hashinfo11ehash_locksE_2040(&hashinfo->ehash_locks)[hash & __get__ZN13inet_hashinfo16ehash_locks_maskE_2041(&hashinfo->ehash_locks_mask)]);
                                                                                                                                                                                                                ^
net/core/sock.acc: In function ‘int inet_ehash_locks_alloc(inet_hashinfo*)’:
net/core/sock.acc:58609:88: warning: taking address of temporary [-fpermissive]
  unsigned int nr_pcpus = __cpus_weight(&(__get_cpu_possible_map_2042(&cpu_possible_map)), 64);
                                                                                        ^
net/core/sock.acc:58622:59: warning: invalid conversion from ‘void*’ to ‘rwlock_t*’ [-fpermissive]
    hashinfo->ehash_locks = vmalloc(size * sizeof(rwlock_t));
                                                           ^
net/core/sock.acc:58626:60: warning: invalid conversion from ‘void*’ to ‘rwlock_t*’ [-fpermissive]
       ((( gfp_t)0x10u) | (( gfp_t)0x40u) | (( gfp_t)0x80u)));
                                                            ^
